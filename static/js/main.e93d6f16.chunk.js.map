{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","link","class","onClick","toggleMode","role","htmlFor","toggleMode1","placeholder","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","word","alert","charAt","slice","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8MAAe,I,YCIA,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACJ,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAEF,oBAAIF,UAAU,WAAd,SAEE,mBAAGA,UAAU,WAAWE,KAAK,SAA7B,SAAuCH,EAAMO,YAI/C,sBAAKC,MAAM,8BAAX,UACE,uBAAOP,UAAU,mBAAmBI,KAAK,WAAWI,QAAST,EAAMU,WAAYC,KAAK,SAASL,GAAG,2BACjG,uBAAOL,UAAS,gCAAwC,UAAbD,EAAME,KAAe,OAAO,QAAvD,KAAmEU,QAAQ,yBAA3F,iCAED,sBAAKJ,MAAM,8BAAX,UACE,uBAAOP,UAAU,mBAAmBI,KAAK,WAAWI,QAAST,EAAMa,YAAaF,KAAK,SAASL,GAAG,2BAClG,uBAAOL,UAAS,gCAAwC,UAAbD,EAAME,KAAe,OAAO,QAAvD,KAAmEU,QAAQ,yBAA3F,gCAGH,uBAAMX,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBI,KAAK,SAASS,YAAY,SAAS,aAAW,WACnF,wBAAQb,UAAU,0BAA0BI,KAAK,SAAjD,+BClCK,SAASU,EAASf,GAC7B,IAuBJ,EAAuBgB,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAEI,OACI,qCACD,sBAAKjB,UAAU,YAAYkB,MAAO,CAACC,MAAmB,UAAbpB,EAAME,KAAe,QAAQ,SAAtE,UACC,sBAAKD,UAAU,OAAf,UACI,6BAAKD,EAAMqB,UACX,0BAAUpB,UAAU,eAAeqB,MAAOL,EAAMM,SAXjC,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QASyDhB,GAAG,QAAQoB,KAAK,IAAKP,MAAO,CAACQ,gBAA6B,UAAb3B,EAAME,KAAe,QAAQ,UAAUkB,MAAmB,UAAbpB,EAAME,KAAe,QAAQ,cAErM,wBAAQD,UAAU,kBAAkBQ,QAhClB,WAEnB,IAAImB,EAAUX,EAAKY,cACnBX,EAAQU,GACR5B,EAAM8B,UAAU,uCAAuC,YA4BtD,iCACA,wBAAQ7B,UAAU,uBAAuBQ,QA3BvB,WAEnB,IAAImB,EAAUX,EAAKc,cACnBb,EAAQU,GACR5B,EAAM8B,UAAU,uCAAuC,YAuBtD,kCACA,wBAAQ7B,UAAU,uBAAuBQ,QAtBpB,WAItBS,EADc,IAEdlB,EAAM8B,UAAU,6BAA6B,YAiB5C,0BAGD,sBAAK7B,UAAU,iBAAiBkB,MAAO,CAACC,MAAmB,UAAbpB,EAAME,KAAe,QAAQ,SAA3E,UACC,8BAAIe,EAAKe,MAAM,KAAKC,OAAO,EAA3B,cAAyChB,EAAKgB,OAA9C,iBACA,8BAAI,KAAQhB,EAAKe,MAAM,KAAKC,OAA5B,sBACA,yCACA,4BAAIhB,EAAKgB,OAAS,EAAEhB,EAAK,kDCzBlBiB,MAhBf,SAAelC,GACX,IAAoBmC,EAKpB,OACInC,EAAMoC,OAAS,8BACX,sBAAKnC,UAAS,sBAAiBD,EAAMoC,MAAM/B,KAA7B,gCAAiEM,KAAK,QAApF,UACG,kCARSwB,EAQWnC,EAAMoC,MAAM/B,KAN5B8B,EAAKE,OAAO,GAAGR,cAAeM,EAAKG,MAAM,MAKhD,KACqDtC,EAAMoC,MAAMG,UCkF9DC,MAxEf,WACA,MAAsBxB,mBAAS,SAA/B,mBAAKd,EAAL,KAAWuC,EAAX,KACA,EAAsCzB,mBAAS,SAA/C,mBACA,GADA,UAC0BA,mBAAS,OAAnC,mBAAOoB,EAAP,KAAcM,EAAd,KAGMZ,EAAY,SAACa,EAAQtC,GAC3BqC,EAAS,CACPH,IAAKI,EACLtC,KAAOA,IAETuC,YAAW,WACTF,EAAS,QACR,OAgCD,OAgBA,cAfE,CAeF,sBACE,cAAC3C,EAAD,CAAQK,MAAM,SAAUF,KAAMA,EAAMQ,WA9CvB,WACH,SAATR,GACDuC,EAAQ,SACRI,SAASC,KAAK3B,MAAMQ,gBAAgB,QACpCG,EAAU,+BAA+B,WACzCe,SAASzC,MAAQ,0BAEjBqC,EAAQ,QACRI,SAASC,KAAK3B,MAAMQ,gBAAgB,UACpCG,EAAU,8BAA8B,WACxCe,SAASzC,MAAQ,yBAoC8CS,YAjCjD,WACJ,SAATX,GACDuC,EAAQ,SACRI,SAASC,KAAK3B,MAAMQ,gBAAgB,QAEpCG,EAAU,+BAA+B,aAGzCW,EAAQ,SACRI,SAASC,KAAK3B,MAAMQ,gBAAgB,UAEpCG,EAAU,6BAA6B,aAsBoDvB,KAAK,aAChG,cAAC,EAAD,CAAO6B,MAAOA,IACd,qBAAKnC,UAAU,iBAAf,SAEI,cAACc,EAAD,CAAUe,UAAaA,EAAYT,QAAQ,sBAAsBnB,KAAQA,UC3ElE6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,M","file":"static/js/main.e93d6f16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport propTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.link}</Link> */}\r\n            <a className=\"nav-link\" href=\"/about\">{props.link}</a>\r\n           \r\n          </li>\r\n          </ul>\r\n          <div class=\"form-check form-switch mx-3\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n           <label className={`form-check-label text-${props.mode==='light'?'grey':'light'} `} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          <div class=\"form-check form-switch mx-3\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode1} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n           <label className={`form-check-label text-${props.mode==='light'?'grey':'light'} `} htmlFor=\"flexSwitchCheckDefault\">Enable Dim Mode</label>\r\n          </div>\r\n\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n\r\n//props ke type set karre\r\nNavbar.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    link : propTypes.string\r\n}\r\n\r\n//by default props\r\n// Navbar.defaultProps = {\r\n//     title:'Some Text here',\r\n//     link: 'Some link text here'\r\n// }","import React, {useState} from 'react'\r\nexport default function Textform(props) {\r\n    const handleupClick = ()=>{\r\n        // console.log(\"Uppercase clicked \"+text)\r\n       let newText = text.toUpperCase();\r\n       setText(newText);\r\n       props.showAlert(\"Successfully! Converted to UpeerCase\",\"success\")\r\n    }\r\n    const handleloClick = ()=>{\r\n        // console.log(\"Uppercase clicked \"+text)\r\n       let newText = text.toLowerCase();\r\n       setText(newText);\r\n       props.showAlert(\"Successfully! Converted to LowerCase\",\"success\")\r\n    }\r\n    const handleclearClick = ()=>{\r\n        // console.log(\"Uppercase clicked \"+text)\r\n\r\n       let newText = '';\r\n       setText(newText);\r\n       props.showAlert(\"Successfully! Text Cleard \",\"success\")\r\n    }\r\n    const handleOnchange = (event)=>{\r\n        // console.log(\"Onchange\")\r\n        setText(event.target.value)\r\n    }\r\nconst [text,setText] = useState('');\r\n    \r\n    return (\r\n        <>\r\n       <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <div className=\"mb-3\">\r\n            <h2>{props.heading}</h2>\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"mybox\" rows=\"6\"  style={{backgroundColor:props.mode==='light'?'white':'#200720',color:props.mode==='light'?'black':'white'}}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-success\" onClick={handleupClick}>Convert To UperCase</button>\r\n        <button className=\"btn btn-success mx-1\" onClick={handleloClick}>Convert To LowerCase</button>\r\n        <button className=\"btn btn-success mx-1\" onClick={handleclearClick}>Clear all</button>\r\n       </div>\r\n        \r\n       <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0?text:\"Enter some text above to preview here..\"}</p>\r\n        \r\n       </div>\r\n       </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        {\r\n            return word.charAt(0).toUpperCase()+ word.slice(1);\r\n        }\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                \r\n           </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\n\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport React, { useState } from 'react' //imrs shortcut\n// import React, {Fragment} from 'react';\n\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\n\nlet name = \"Jay\";\nfunction App() {\nlet [mode, setMode] = useState('light'); //state to set view mode\nlet [textareamode, setTextareamode] = useState('light'); //state to set view mode\nconst [alert, setAlert] = useState(null);\n\n//alert ka message and type show hoga alert me is func se\nconst showAlert = (message,type)=>{\nsetAlert({\n  msg: message,\n  type : type\n})\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n}\n\nlet toggleMode = ()=>{\n  if(mode === 'dark'){\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enabled!\",\"primary\")\n    document.title = \"Text Utils-Light Mode\";\n  }else{\n    setMode('dark');\n    document.body.style.backgroundColor='#200720';\n    showAlert(\"Dark mode has been enabled!\",\"success\");\n    document.title = \"Text Utils-Dark Mode\";\n  }\n}\nlet toggleMode1 = ()=>{\n  if(mode === 'dark'){\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    \n    showAlert(\"Light mode has been enabled!\",\"primary\")\n  }else{\n    // toggleMode();\n    setMode('light');\n    document.body.style.backgroundColor='#696969';\n  \n    showAlert(\"Dim mode has been enabled!\",\"success\")\n  }\n}\n\n\n  return (\n    // <Router>\n    // <>\n    //   <Navbar title=\"Radhey\"  mode={mode} toggleMode = {toggleMode}  toggleMode1 = {toggleMode1} link=\"About us\" />\n    //   <Alert alert={alert}/>\n    //   <div className=\"container my-3\">\n    //   <Routes>\n    //       <Route path=\"/about\" element={<About/>}></Route>\n    //       <Route path=\"/\" element={<Textform showAlert = {showAlert}  heading=\"Enter the text here\" mode = {mode}/>} ></Route>\n    //     </Routes>\n    //   </div>\n    // </>\n    // </Router>\n\n\n    \n  <>\n    <Navbar title=\"Radhey\"  mode={mode} toggleMode = {toggleMode}  toggleMode1 = {toggleMode1} link=\"About us\" />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n        {/* <About/> */}\n        <Textform showAlert = {showAlert}  heading=\"Enter the text here\" mode = {mode}/> \n    </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}